package com.tumorteller.utility;

import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;

import org.bson.Document;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.mongodb.MongoClient;
import com.mongodb.MongoCredential;

public class Database {
	
	private String databaseHost;
	
	private int databasePort;
	
	private String databaseName;

	private static MongoClient mongo;

	private static Logger log = LoggerFactory.getLogger("Database");
	
	
	
	public Database() {
		MongoClient mongoClient = getConnection();
		mongoClient.getDatabase(this.databaseName);
	}

	
	public MongoClient getConnection() {
		FileReader reader;
		
		try {
			reader = new FileReader(new File(getClass().getClassLoader().getResource("database.properties").getFile()));
			Properties properties = new Properties();
			properties.load(reader);
			databaseHost = properties.getProperty("db.hostName");
			databasePort = Integer.parseInt(properties.getProperty("db.portNumber"));
			databaseName = properties.getProperty("db.name");

		} catch (FileNotFoundException e1) {
			log.error("");
			e1.printStackTrace();
		} catch (IOException e) {
			log.error("");
			e.printStackTrace();
		}

		// Creating a Mongo client
		mongo = new MongoClient(databaseHost, databasePort);

		// Creating Credentials
		MongoCredential credential = MongoCredential.createCredential("sampleUser", databaseName, "password".toCharArray());
		log.info("Credentials ::" + credential);

		try {
			mongo.getAddress();
			log.info("Connected to the database successfully");
		} catch (Exception e) {
			log.error("Failed to connect to the database");
			mongo.close();
		}

		return mongo;
	}

	
	public final static MongoDatabase getDatabase(String dbName) {
		// Accessing the database
		MongoDatabase database = mongo.getDatabase(dbName);
		return database;
	}

//	public static void main(String[] args) {
//		new Database().getConnection();
//	}
	
	
	public void addUser() {
		
	}

}